name: Test, build and release

on:
  push:
    branches:
      - '*'

jobs:

  main:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/cache@v2
        id: cypress-cache
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-
          
      - run: npm ci
          
      - run: npm run prettier:check

      - run: npm run lint

      # - run: npm run test:ci

      # - run: npm run test:e2e:ci

      # - run: npm run test:e2e:ci:chrome

      - run: npm run build
        #env:
          #SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
          #SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}

      - uses: actions/upload-artifact@v1
        with:
          name: public
          path: public

      #- uses: actions/upload-artifact@v1
      #  with:
      #    name: cypress-videos
      #    path: www/cypress/videos


  release:
    name: Release
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
                      
      - run: npm ci
          
      - if: github.ref == 'refs/heads/master'
        run: npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release
        
      - run: git describe --tags

  deploy:
    name: Deploy
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/download-artifact@master
        with:
          name: public
          path: public

      - run: npm install --no-package-lock firebase-tools

      - uses: actions/vercel-deployment@0.5.1
        # if: github.ref == 'refs/heads/master'
        with:
          vercelToken: ${{ secrets.VERCEL_TOKEN }}
          vercelOrgId: ${{ secrets.VERCEL_ORG_ID }}
          vercelProjectId: ${{ secrets.VERCEL_PROJECT_ID }}
          githubToken: ${{ secrets.PAT }}
          sourceDirectory: "./"
          # assignDomain: "preview.example.com"
        
        
      